{"mappings":"oeAAA,IAAAA,EAAAC,EAAA,SAEA,SAASC,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC3B,MAAMC,EAAgBC,KAAKC,SAAW,GACtCC,YAAW,KACLH,EACFF,EAAQN,EAAAY,OAAOC,QAAQ,uBAAqBV,QAAiBC,QAE3DG,EAAKP,EAAAY,OAAOE,QAAQ,sBAAoBX,QAAeC,OAAW,GAErEA,EAAM,G,EAIA,CACXW,KAAMC,SAASC,cAAc,SAC7BC,UAAWF,SAASC,cAAc,kBAClCE,SAAUH,SAASC,cAAc,iBACjCG,WAAYJ,SAASC,cAAc,mBACnCI,WAAYL,SAASC,cAAc,YAGhCF,KAAKO,iBAAiB,UAE3B,SAAkBC,GAChBA,EAAIC,iBACJ,IAAIrB,EAAW,EACf,MACEsB,UAAUrB,MAACA,EAAKsB,KAAEA,EAAIC,OAAEA,IACtBJ,EAAIK,cAER,IAAIC,EAAaC,OAAO1B,EAAM2B,OAC1BC,EAAYF,OAAOJ,EAAKK,OACxBE,EAAcH,OAAOH,EAAOI,OAEhC,IAAK,IAAIG,EAAI,EAAGA,EAAID,EAAaC,IAE/BhC,EAAcC,EAAU0B,GAAYM,MAAK,SAAUC,OAAM,SAEzDjC,GAAY,EACZ0B,GAAcG,C","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve(Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`));\n      } else {\n        reject(Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`));\n      }\n    }, delay); \n  });  \n};\n\nconst refs = {\n  form: document.querySelector('.form'),\n  delayForm: document.querySelector('[name=\"delay\"]'),\n  stepForm: document.querySelector('[name=\"step\"]'),\n  amountForm: document.querySelector('[name=\"amount\"]'),\n  buttonForm: document.querySelector('button'),\n};\n\nrefs.form.addEventListener('submit', onSubmit);\n\nfunction onSubmit(evt) {\n  evt.preventDefault();\n  let position = 1;\n  const {\n    elements: {delay, step, amount}\n  } = evt.currentTarget;\n\n  let firstDelay = Number(delay.value);\n  let delayStep = Number(step.value);\n  let firstAmount = Number(amount.value);\n\n  for (let i = 0; i < firstAmount; i++) {\n  \n    createPromise(position, firstDelay).then(() => {}).catch(() => {});\n\n    position += 1;\n    firstDelay += delayStep;   \n  };\n};"],"names":["$iQIUW","parcelRequire","$47d4ff9957288465$var$createPromise","position","delay","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","Notify","success","failure","form","document","querySelector","delayForm","stepForm","amountForm","buttonForm","addEventListener","evt","preventDefault","elements","step","amount","currentTarget","firstDelay","Number","value","delayStep","firstAmount","i","then","catch"],"version":3,"file":"03-promises.b881c135.js.map"}